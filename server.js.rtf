{\rtf1\ansi\ansicpg1251\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww34000\viewh18640\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const WebSocket = require('ws');\
\
const PORT = process.env.PORT || 8080;\
const wss = new WebSocket.Server(\{ port: PORT \});\
\
let rooms = \{\}; // \{ roomId: [player1, player2] \}\
\
wss.on('connection', ws => \{\
    ws.on('message', message => \{\
        const data = JSON.parse(message);\
\
        if(data.type === 'join') \{\
            const roomId = data.roomId;\
            ws.roomId = roomId;\
            if(!rooms[roomId]) rooms[roomId] = [];\
            rooms[roomId].push(ws);\
\
            if(rooms[roomId].length === 2)\{\
                rooms[roomId].forEach((p, i) => p.send(JSON.stringify(\{ type: 'start', turn: i===0 \})));\
            \}\
        \}\
\
        if(data.type === 'move') \{\
            const room = rooms[ws.roomId];\
            if(room) \{\
                room.forEach(p => \{\
                    if(p !== ws) p.send(JSON.stringify(\{ type: 'opponent-move', cell: data.cell \}));\
                \});\
            \}\
        \}\
    \});\
\
    ws.on('close', () => \{\
        if(ws.roomId && rooms[ws.roomId])\{\
            rooms[ws.roomId] = rooms[ws.roomId].filter(p => p !== ws);\
        \}\
    \});\
\});\
\
console.log('Server running on ws://localhost:' + PORT);\
\
}